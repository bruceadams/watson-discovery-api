/* 
 * Discovery
 *
 * The IBM Watson&trade; Discovery Service is a cognitive search and content analytics engine that you can add to applications to identify patterns, trends and actionable insights to drive better decision-making. Securely unify structured and unstructured data with pre-enriched content, and use a simplified query language to eliminate the need for manual filtering of results.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// QueryResultMetadata : Metadata of a query result.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct QueryResultMetadata {
  /// An unbounded measure of the relevance of a particular result, dependent on the query and matching document. A higher score indicates a greater match to the query parameters.
  #[serde(rename = "score")]
  score: f64,
  /// The confidence score for the given result. Calculated based on how relevant the result is estimated to be. confidence can range from `0.0` to `1.0`. The higher the number, the more relevant the document. The `confidence` value for a result was calculated using the model specified in the `document_retrieval_strategy` field of the result set.
  #[serde(rename = "confidence")]
  confidence: f64
}

impl QueryResultMetadata {
  /// Metadata of a query result.
  pub fn new(score: f64, confidence: f64) -> QueryResultMetadata {
    QueryResultMetadata {
      score: score,
      confidence: confidence
    }
  }

  pub fn set_score(&mut self, score: f64) {
    self.score = score;
  }

  pub fn with_score(mut self, score: f64) -> QueryResultMetadata {
    self.score = score;
    self
  }

  pub fn score(&self) -> &f64 {
    &self.score
  }


  pub fn set_confidence(&mut self, confidence: f64) {
    self.confidence = confidence;
  }

  pub fn with_confidence(mut self, confidence: f64) -> QueryResultMetadata {
    self.confidence = confidence;
    self
  }

  pub fn confidence(&self) -> &f64 {
    &self.confidence
  }


}



