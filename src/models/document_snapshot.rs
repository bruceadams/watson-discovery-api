/* 
 * Discovery
 *
 * The IBM Watson&trade; Discovery Service is a cognitive search and content analytics engine that you can add to applications to identify patterns, trends and actionable insights to drive better decision-making. Securely unify structured and unstructured data with pre-enriched content, and use a simplified query language to eliminate the need for manual filtering of results.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct DocumentSnapshot {
  #[serde(rename = "step")]
  step: Option<String>,
  #[serde(rename = "snapshot")]
  snapshot: Option<Value>
}

impl DocumentSnapshot {
  pub fn new() -> DocumentSnapshot {
    DocumentSnapshot {
      step: None,
      snapshot: None
    }
  }

  pub fn set_step(&mut self, step: String) {
    self.step = Some(step);
  }

  pub fn with_step(mut self, step: String) -> DocumentSnapshot {
    self.step = Some(step);
    self
  }

  pub fn step(&self) -> Option<&String> {
    self.step.as_ref()
  }

  pub fn reset_step(&mut self) {
    self.step = None;
  }

  pub fn set_snapshot(&mut self, snapshot: Value) {
    self.snapshot = Some(snapshot);
  }

  pub fn with_snapshot(mut self, snapshot: Value) -> DocumentSnapshot {
    self.snapshot = Some(snapshot);
    self
  }

  pub fn snapshot(&self) -> Option<&Value> {
    self.snapshot.as_ref()
  }

  pub fn reset_snapshot(&mut self) {
    self.snapshot = None;
  }

}



