/* 
 * Discovery
 *
 * The IBM Watson&trade; Discovery Service is a cognitive search and content analytics engine that you can add to applications to identify patterns, trends and actionable insights to drive better decision-making. Securely unify structured and unstructured data with pre-enriched content, and use a simplified query language to eliminate the need for manual filtering of results.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// RetrievalDetails : An object contain retrieval type information.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct RetrievalDetails {
  /// Indentifies the document retrieval strategy used for this query. `relevancy_training` indicates that the results were returned using a relevancy trained model. `continuous_relevancy_training` indicates that the results were returned using the continuous relevancy training model created by result feedback analysis. `untrained` means the results were returned using the standard untrained model.   **Note**: In the event of trained collections being queried, but the trained model is not used to return results, the **document_retrieval_strategy** will be listed as `untrained`.
  #[serde(rename = "document_retrieval_strategy")]
  document_retrieval_strategy: Option<String>
}

impl RetrievalDetails {
  /// An object contain retrieval type information.
  pub fn new() -> RetrievalDetails {
    RetrievalDetails {
      document_retrieval_strategy: None
    }
  }

  pub fn set_document_retrieval_strategy(&mut self, document_retrieval_strategy: String) {
    self.document_retrieval_strategy = Some(document_retrieval_strategy);
  }

  pub fn with_document_retrieval_strategy(mut self, document_retrieval_strategy: String) -> RetrievalDetails {
    self.document_retrieval_strategy = Some(document_retrieval_strategy);
    self
  }

  pub fn document_retrieval_strategy(&self) -> Option<&String> {
    self.document_retrieval_strategy.as_ref()
  }

  pub fn reset_document_retrieval_strategy(&mut self) {
    self.document_retrieval_strategy = None;
  }

}



