/* 
 * Discovery
 *
 * The IBM Watson&trade; Discovery Service is a cognitive search and content analytics engine that you can add to applications to identify patterns, trends and actionable insights to drive better decision-making. Securely unify structured and unstructured data with pre-enriched content, and use a simplified query language to eliminate the need for manual filtering of results.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// GatewayDelete : Gatway deletion confirmation

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct GatewayDelete {
  /// The gateway ID of the deleted gateway.
  #[serde(rename = "gateway_id")]
  gateway_id: Option<String>,
  /// The status of the request.
  #[serde(rename = "status")]
  status: Option<String>
}

impl GatewayDelete {
  /// Gatway deletion confirmation
  pub fn new() -> GatewayDelete {
    GatewayDelete {
      gateway_id: None,
      status: None
    }
  }

  pub fn set_gateway_id(&mut self, gateway_id: String) {
    self.gateway_id = Some(gateway_id);
  }

  pub fn with_gateway_id(mut self, gateway_id: String) -> GatewayDelete {
    self.gateway_id = Some(gateway_id);
    self
  }

  pub fn gateway_id(&self) -> Option<&String> {
    self.gateway_id.as_ref()
  }

  pub fn reset_gateway_id(&mut self) {
    self.gateway_id = None;
  }

  pub fn set_status(&mut self, status: String) {
    self.status = Some(status);
  }

  pub fn with_status(mut self, status: String) -> GatewayDelete {
    self.status = Some(status);
    self
  }

  pub fn status(&self) -> Option<&String> {
    self.status.as_ref()
  }

  pub fn reset_status(&mut self) {
    self.status = None;
  }

}



