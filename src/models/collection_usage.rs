/* 
 * Discovery
 *
 * The IBM Watson&trade; Discovery Service is a cognitive search and content analytics engine that you can add to applications to identify patterns, trends and actionable insights to drive better decision-making. Securely unify structured and unstructured data with pre-enriched content, and use a simplified query language to eliminate the need for manual filtering of results.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// CollectionUsage : Summary of the collection usage in the environment

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct CollectionUsage {
  /// Number of active collections in the environment
  #[serde(rename = "available")]
  available: Option<i32>,
  /// Total number of collections allowed in the environment
  #[serde(rename = "maximum_allowed")]
  maximum_allowed: Option<i32>
}

impl CollectionUsage {
  /// Summary of the collection usage in the environment
  pub fn new() -> CollectionUsage {
    CollectionUsage {
      available: None,
      maximum_allowed: None
    }
  }

  pub fn set_available(&mut self, available: i32) {
    self.available = Some(available);
  }

  pub fn with_available(mut self, available: i32) -> CollectionUsage {
    self.available = Some(available);
    self
  }

  pub fn available(&self) -> Option<&i32> {
    self.available.as_ref()
  }

  pub fn reset_available(&mut self) {
    self.available = None;
  }

  pub fn set_maximum_allowed(&mut self, maximum_allowed: i32) {
    self.maximum_allowed = Some(maximum_allowed);
  }

  pub fn with_maximum_allowed(mut self, maximum_allowed: i32) -> CollectionUsage {
    self.maximum_allowed = Some(maximum_allowed);
    self
  }

  pub fn maximum_allowed(&self) -> Option<&i32> {
    self.maximum_allowed.as_ref()
  }

  pub fn reset_maximum_allowed(&mut self) {
    self.maximum_allowed = None;
  }

}



