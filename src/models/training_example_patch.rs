/* 
 * Discovery
 *
 * The IBM Watson&trade; Discovery Service is a cognitive search and content analytics engine that you can add to applications to identify patterns, trends and actionable insights to drive better decision-making. Securely unify structured and unstructured data with pre-enriched content, and use a simplified query language to eliminate the need for manual filtering of results.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct TrainingExamplePatch {
  #[serde(rename = "cross_reference")]
  cross_reference: Option<String>,
  #[serde(rename = "relevance")]
  relevance: Option<i32>
}

impl TrainingExamplePatch {
  pub fn new() -> TrainingExamplePatch {
    TrainingExamplePatch {
      cross_reference: None,
      relevance: None
    }
  }

  pub fn set_cross_reference(&mut self, cross_reference: String) {
    self.cross_reference = Some(cross_reference);
  }

  pub fn with_cross_reference(mut self, cross_reference: String) -> TrainingExamplePatch {
    self.cross_reference = Some(cross_reference);
    self
  }

  pub fn cross_reference(&self) -> Option<&String> {
    self.cross_reference.as_ref()
  }

  pub fn reset_cross_reference(&mut self) {
    self.cross_reference = None;
  }

  pub fn set_relevance(&mut self, relevance: i32) {
    self.relevance = Some(relevance);
  }

  pub fn with_relevance(mut self, relevance: i32) -> TrainingExamplePatch {
    self.relevance = Some(relevance);
    self
  }

  pub fn relevance(&self) -> Option<&i32> {
    self.relevance.as_ref()
  }

  pub fn reset_relevance(&mut self) {
    self.relevance = None;
  }

}



