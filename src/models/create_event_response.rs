/* 
 * Discovery
 *
 * The IBM Watson&trade; Discovery Service is a cognitive search and content analytics engine that you can add to applications to identify patterns, trends and actionable insights to drive better decision-making. Securely unify structured and unstructured data with pre-enriched content, and use a simplified query language to eliminate the need for manual filtering of results.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// CreateEventResponse : An object defining the event being created.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct CreateEventResponse {
  /// The event type that was created.
  #[serde(rename = "type")]
  type_: Option<String>,
  #[serde(rename = "data")]
  data: Option<::models::EventData>
}

impl CreateEventResponse {
  /// An object defining the event being created.
  pub fn new() -> CreateEventResponse {
    CreateEventResponse {
      type_: None,
      data: None
    }
  }

  pub fn set_type_(&mut self, type_: String) {
    self.type_ = Some(type_);
  }

  pub fn with_type_(mut self, type_: String) -> CreateEventResponse {
    self.type_ = Some(type_);
    self
  }

  pub fn type_(&self) -> Option<&String> {
    self.type_.as_ref()
  }

  pub fn reset_type_(&mut self) {
    self.type_ = None;
  }

  pub fn set_data(&mut self, data: ::models::EventData) {
    self.data = Some(data);
  }

  pub fn with_data(mut self, data: ::models::EventData) -> CreateEventResponse {
    self.data = Some(data);
    self
  }

  pub fn data(&self) -> Option<&::models::EventData> {
    self.data.as_ref()
  }

  pub fn reset_data(&mut self) {
    self.data = None;
  }

}



