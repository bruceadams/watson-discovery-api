/* 
 * Discovery
 *
 * The IBM Watson&trade; Discovery Service is a cognitive search and content analytics engine that you can add to applications to identify patterns, trends and actionable insights to drive better decision-making. Securely unify structured and unstructured data with pre-enriched content, and use a simplified query language to eliminate the need for manual filtering of results.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// CreateEventObject : An object defining the event being created.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct CreateEventObject {
  /// The event type to be created.
  #[serde(rename = "type")]
  type_: String,
  #[serde(rename = "data")]
  data: ::models::EventData
}

impl CreateEventObject {
  /// An object defining the event being created.
  pub fn new(type_: String, data: ::models::EventData) -> CreateEventObject {
    CreateEventObject {
      type_: type_,
      data: data
    }
  }

  pub fn set_type_(&mut self, type_: String) {
    self.type_ = type_;
  }

  pub fn with_type_(mut self, type_: String) -> CreateEventObject {
    self.type_ = type_;
    self
  }

  pub fn type_(&self) -> &String {
    &self.type_
  }


  pub fn set_data(&mut self, data: ::models::EventData) {
    self.data = data;
  }

  pub fn with_data(mut self, data: ::models::EventData) -> CreateEventObject {
    self.data = data;
    self
  }

  pub fn data(&self) -> &::models::EventData {
    &self.data
  }


}



