/* 
 * Discovery
 *
 * The IBM Watson&trade; Discovery Service is a cognitive search and content analytics engine that you can add to applications to identify patterns, trends and actionable insights to drive better decision-making. Securely unify structured and unstructured data with pre-enriched content, and use a simplified query language to eliminate the need for manual filtering of results.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct WordStyle {
  #[serde(rename = "level")]
  level: Option<i32>,
  #[serde(rename = "names")]
  names: Option<Vec<String>>
}

impl WordStyle {
  pub fn new() -> WordStyle {
    WordStyle {
      level: None,
      names: None
    }
  }

  pub fn set_level(&mut self, level: i32) {
    self.level = Some(level);
  }

  pub fn with_level(mut self, level: i32) -> WordStyle {
    self.level = Some(level);
    self
  }

  pub fn level(&self) -> Option<&i32> {
    self.level.as_ref()
  }

  pub fn reset_level(&mut self) {
    self.level = None;
  }

  pub fn set_names(&mut self, names: Vec<String>) {
    self.names = Some(names);
  }

  pub fn with_names(mut self, names: Vec<String>) -> WordStyle {
    self.names = Some(names);
    self
  }

  pub fn names(&self) -> Option<&Vec<String>> {
    self.names.as_ref()
  }

  pub fn reset_names(&mut self) {
    self.names = None;
  }

}



